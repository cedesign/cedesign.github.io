///**
// * Hexagons
// *
// * @author Drake Cooper
// * @link http://www.drakecooper.com
// * @copyright (c) 2013, Drake Cooper. All rights reserved.
// * @info This is a custom file and may not be used, modified, or reproduced
// * without express permission of Drake Cooper.
// */


$hexagon-background-color:        $link-color                                 !default;
$hexagon-background-color-hover:  $link-hover-color                           !default;

$hexagon-background-color-top:    $link-color                                 !default;
$hexagon-top-opacity:             0                                           !default;
$hexagon-top-opacity-hover:       .7                                          !default;

$hexagon-color:                   #fff                                        !default;
$hexagon-font-style:              $h3-font-style                              !default;
$hexagon-font-weight:             $h3-font-weight                             !default;
$hexagon-font-size:               $h3-font-size                               !default;
$hexagon-font-family:             $h3-font-family                             !default;
$hexagon-line-height:             line-height($h3-font-size)                  !default;
$hexagon-text-align:              center                                      !default;
$hexagon-text-transform:          uppercase                                   !default;

$hexagon-width:                   180px                                       !default;
$hexagon-z-index:                 1                                           !default;



//------------------------------------------------------
//
//    A more complex hexagon allowing for many options.
//
//    Example markup:
//
//		<div class="hexagon gradient">
//			<a href="#" style="">
//				<div class="inner">Foo</div>
//				<div class="hex-1"><span class="after"></span></div>
//				<div class="hex-2"><span class="after"></span></div>
//				<span class="after"></span>
//			</a>
//		</div>
//
//		span.after is optional allowing for hover states
//
//------------------------------------------------------

@mixin hexagon(
						$background-color:        $hexagon-background-color,
						$background-color-hover:  $hexagon-background-color-hover,

						$background-color-top:    $hexagon-background-color-top,
						$top-opacity:             $hexagon-top-opacity,
						$top-opacity-hover:       $hexagon-top-opacity-hover,

						$color:                   $hexagon-color,
						$font-style:              $hexagon-font-style,
						$font-weight:             $hexagon-font-weight,
						$font-size:               $hexagon-font-size,
						$font-family:             $hexagon-font-family,
						$line-height:             $hexagon-line-height,
						$text-align:              $hexagon-text-align,
						$text-transform:          $hexagon-text-transform,

						$width:                   $hexagon-width,
						$z-index:                 $hexagon-z-index
					) {

	.hexagon {
		display: inline-block;
		margin-bottom: round($width * .195);
		margin-top: round($width * .195);
		position: relative;
		vertical-align: middle;
		width: $width;
		z-index: $z-index;
//		float: none;
//		font-size: 16px;

		> a, > div {
			@include background-size(auto, round($width * 1.16));
			@include transition-property('background-color');
			@include transition-duration('.3s');
			background-color: $background-color;
			background-position: 50% 50%;
			background-repeat: no-repeat;
			color: $color;
			display: block;
			font: $font-style $font-weight #{$font-size}/$line-height $font-family;
			height: ceil($width * .578333333);
			text-transform: $text-transform;
			text-align: $text-align;
//			border: none;
//			transition: none 1s ease 0s;
//			word-spacing: 1px;

			&:hover { background-color: $background-color-hover; }
		}

		// .hex-1, .hex-2
		.hex-1, .hex-2 {
			background: inherit;
			height: 100%;
			left: 0;
			overflow: hidden;
			position: absolute;
			top: 0;
			width: 100%;
			z-index: -2;

			&:before {
				background: inherit;
				content: "";
				height: ceil($width * 1.15333333);
				left: 0;
				position: absolute;
				width: ceil($width * 1.15333333);
				z-index: -1;
			}
		}

		$translate: round($width * .21);
		.hex-1 {
			z-index: -1;
			@include transform(rotate(60deg));
			&:before { @include transform(rotate(-60deg) translate($translate, -$translate)); }
		}
		.hex-2 {
			@include transform(rotate(-60deg));
			&:before { bottom: 0; @include transform(rotate(60deg) translate($translate, $translate)); }
		}


		// .after pseudo-elements can't transition
		> a, > div { &:hover .after { @include opacity($top-opacity-hover); } }
//		.hex-1, .hex-2 { .after { z-index: -1; } }
		.after {
			background: none repeat scroll 0 0 $background-color-top;
			height: 100%;
			left: 0;
			position: absolute;
			top: 0;
			transition: none 1s ease 0s;
			width: 100%;
			z-index: 15;
			@include opacity($top-opacity);
			@include transition-property('opacity');
			@include transition-duration('.3s');
		}

		// .inner
		.inner {
			display: inline-block;
			max-width: 80%;
			position: relative;
			vertical-align: middle;
			white-space: normal;
			z-index: 20;

			img {
				display: inline-block;
				vertical-align: middle;
			}
		}

		// .full-img
		&.full-img img {
			max-height: 140%;
			width: auto;
		}
	}

	// squares for LT-IE9
	.lt-ie9 .hexagon {
		margin-bottom: 0;
		margin-top: 0;
		> a, > div 	{
			padding-bottom: round($width * .195);
			padding-top: round($width * .195);
		}
	}
}


//------------------------------------------------------
//
//    Convenient mixins for overriding the defaults
//
//------------------------------------------------------

@mixin hexagon-modify(
									$background-color: false,
									$background-color-hover: false,
									$background-image: false,
									$top-color: false,
									$top-opacity: false,
									$top-opacity-hover: false,

									$font-style:  $hexagon-font-style,
									$font-weight: $hexagon-font-weight,
									$font-size:   $hexagon-font-size,
									$line-height: $hexagon-line-height,
									$font-family: $hexagon-font-family,

									$selector:    false
								) {

	@if $selector {
		#{$selector} {
			@include hexagon-settings($background-color, $background-color-hover, $background-image, $top-color, $top-opacity, $top-opacity-hover, $font-style, $font-weight, $font-size, $line-height, $font-family);
		}
	} @else {
			@include hexagon-settings($background-color, $background-color-hover, $background-image, $top-color, $top-opacity, $top-opacity-hover, $font-style, $font-weight, $font-size, $line-height, $font-family);
	}
}

@mixin hexagon-settings(
									$background-color: false,
									$background-color-hover: false,
									$background-image: false,
									$top-color: false,
									$top-opacity: false,
									$top-opacity-hover: false,

									$font-style:  $hexagon-font-style,
									$font-weight: $hexagon-font-weight,
									$font-size:   $hexagon-font-size,
									$line-height: $hexagon-line-height,
									$font-family: $hexagon-font-family
								) {
	> a, > div {
		@if $background-color {
			background-color: $background-color;
		}
		@if $background-image {
			@include background-image($background-image);
		}
		@if $font-style  != $hexagon-font-style or
				$font-weight != $hexagon-font-weight or
				$font-size   != $hexagon-font-size or
				$line-height != $hexagon-line-height or
				$font-family != $hexagon-font-family {

			font: $font-style $font-weight #{$font-size}/$line-height $font-family;
		}

		// &:hover
		@if $background-color-hover {
			&:hover { background-color: $background-color-hover; }
		}

		// .after
		@if $top-color or $top-opacity {
			.after {
				@if $top-color { background-color: $top-color; }
				@if $top-opacity { @include opacity($top-opacity); }
			}
		}

		// &:hover .after
		@if $top-opacity-hover {
			&:hover .after { @include opacity($top-opacity-hover); }
		}

	}
}


//------------------------------------------------------
//
//    Individual overrides
//
//------------------------------------------------------

@mixin hexagon-background-color($color, $selector: false) {
	@if $selector {
		#{$selector} { > a, > div { background-color: $color; } }
	} @else {
		> a, > div { background-color: $color; }
	}
}

@mixin hexagon-background-color-hover($color, $selector: false) {
	@if $selector {
		#{$selector} { > a, > div { &:hover { background-color: $color; } } }
	} @else {
		> a, > div { &:hover { background-color: $color; } }
	}
}

@mixin hexagon-top-color($color, $selector: false) {
	@if $selector {
		#{$selector} { > a, > div { .after { background-color: $color; } } }
	} @else {
		> a, > div { .after { background-color: $color; } }
	}
}

@mixin hexagon-top-opacity-hover($opacity, $selector: false) {
	@if $selector {
		#{$selector} { > a, > div { &:hover .after { @include opacity($opacity); } } }
	} @else {
		> a, > div { &:hover .after { @include opacity($opacity); } }
	}
}

// gradients don't work so well, e.g., linear-gradient(left top, $link-color, $link-hover-color)
@mixin hexagon-background-image($image, $selector: false) {
	@if $selector {
		#{$selector} { > a, > div { @include background-image($image); } }
	} @else {
		> a, > div { @include background-image($image); }
	}
}

@mixin hexagon-font(
								$font-style:  $hexagon-font-style,
								$font-weight: $hexagon-font-weight,
								$font-size:   $hexagon-font-size,
								$line-height: $hexagon-line-height,
								$font-family: $hexagon-font-family,
								$selector:    false
							) {
	@if $selector {
		#{$selector} { > a, > div { font: $font-style $font-weight #{$font-size}/$line-height $font-family; } }
	} @else {
		> a, > div { font: $font-style $font-weight #{$font-size}/$line-height $font-family; }
	}
}



//------------------------------------------------------
//
//    Uses borders on pseudo-elements to create the
//    hexagon. Light weight, but not many options.
//    Example markup:
//    <div class="hex">Simple Hexagon</div>
//
//------------------------------------------------------

@mixin simple-hexagon(
									$background-color:        $hexagon-background-color,
									$background-color-hover:  $hexagon-background-color-hover,

									$background-color-top:    $hexagon-background-color-top,
									$top-opacity:             $hexagon-top-opacity,
									$top-opacity-hover:       $hexagon-top-opacity-hover,

									$color:                   $hexagon-color,
									$font-style:              $hexagon-font-style,
									$font-weight:             $hexagon-font-weight,
									$font-size:               $hexagon-font-size,
									$font-family:             $hexagon-font-family,
									$line-height:             $hexagon-line-height,
									$text-align:              $hexagon-text-align,
									$text-transform:          $hexagon-text-transform,

									$width:                   $hexagon-width,
									$z-index:                 $hexagon-z-index
								) {

// math
$px58: round($width * .58);
$px29: round($width * .29);

	.hex {
		background: none $background-color;
		color: $color;
		display: inline-block;
		font: $font-style $font-weight #{$font-size}/$line-height $font-family;
		height: $px58;
		position: relative;
		text-align: $text-align;
		text-transform: $text-transform;
		@include transition-property('none'); // pseudo-elements can't transition.
		vertical-align: middle;
		width: $width;
		&:before {
			border-bottom: $px29 solid $background-color;
			border-left: $width/2 solid transparent;
			border-right: $width/2 solid transparent;
			content: "";
			height: 0;
			left: 0;
			position: absolute;
			top: -$px29;
			width: 0;
		}
		&:after {
			border-left: $width/2 solid transparent;
			border-right: $width/2 solid transparent;
			border-top: $px29 solid $background-color;
			bottom: -$px29;
			content: "";
			height: 0;
			left: 0;
			position: absolute;
			width: 0;
		}
		&:hover {
			background-color: $background-color-hover;
			color: $color;
			cursor: pointer;
			&:before { border-bottom-color: $background-color-hover; }
			&:after  { border-top-color:    $background-color-hover; }
		}
	}
}

@mixin simple-hexagon-modify(
									$background-color:        false,
									$background-color-hover:  false,

									$background-color-top:    false,
									$top-opacity:             false,
									$top-opacity-hover:       false,

									$color:                   false,
									$color-hover:             false,

									$font-style:              $hexagon-font-style,
									$font-weight:             $hexagon-font-weight,
									$font-size:               $hexagon-font-size,
									$font-family:             $hexagon-font-family,
									$line-height:             $hexagon-line-height,
									$text-align:              false,
									$text-transform:          false,

									$width:                   false,
									$z-index:                 false,

									$selector:    false
								) {
	@if $selector {
		#{$selector} {
			@include simple-hexagon-settings($background-color, $background-color-hover, $background-color-top, $top-opacity, $top-opacity-hover, $color, $color-hover, $font-style, $font-weight, $font-size, $line-height, $font-family, $text-align, $text-transform, $width, $z-index);
		}
	} @else {
			@include simple-hexagon-settings($background-color, $background-color-hover, $background-color-top, $top-opacity, $top-opacity-hover, $color, $color-hover, $font-style, $font-weight, $font-size, $line-height, $font-family, $text-align, $text-transform, $width, $z-index);
	}
}

@mixin simple-hexagon-settings(
									$background-color:        false,
									$background-color-hover:  false,

									$background-color-top:    false,
									$top-opacity:             false,
									$top-opacity-hover:       false,

									$color:                   false,
									$color-hover:             false,

									$font-style:              $hexagon-font-style,
									$font-weight:             $hexagon-font-weight,
									$font-size:               $hexagon-font-size,
									$font-family:             $hexagon-font-family,
									$line-height:             $hexagon-line-height,
									$text-align:              false,
									$text-transform:          false,

									$width:                   false,
									$z-index:                 false
								) {

	$px58: 0;
	$px29: 0;
	@if $width {
		$px58: round($width * .58);
		$px29: round($width * .29);
	}

	@if $background-color {
		background: none $background-color;
		&:before { border-bottom-color: $background-color; }
		&:after  { border-top-color:    $background-color; }
	}
	@if $color {
		color: $color;
		@if $color-hover == false {
			&:hover { color: $color; }
		}
	}
	@if $color-hover {
		&:hover { color: $color-hover; }
	}
	@if $font-style  != $hexagon-font-style or
			$font-weight != $hexagon-font-weight or
			$font-size   != $hexagon-font-size or
			$line-height != $hexagon-line-height or
			$font-family != $hexagon-font-family {
		font: $font-style $font-weight #{$font-size}/$line-height $font-family;
	}
	@if $width {
		height: $px58;
		width: $width;
		&:before {
			border-bottom-width: $px29;
			border-left-width: $width/2;
			border-right-width: $width/2;
			top: -$px29;
		}
		&:after {
			border-left-width: $width/2;
			border-right-width: $width/2;
			border-top-width: $px29;
			bottom: -$px29;
		}
	}
	@if $text-align {
		text-align: $text-align;
	}
	@if $text-transform {
		text-transform: $text-transform;
	}
	@if $background-color-hover {
		&:hover {
			background-color: $background-color-hover;
			&:before { border-bottom-color: $background-color-hover; }
			&:after  { border-top-color:    $background-color-hover; }
		}
	}
}